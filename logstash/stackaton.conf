input { 
  file { 
      path => "/tmp/stackaton-audit.log"
      sincedb_path => "/tmp/sincedb-stackaton_audit"
      start_position => beginning
  }
}

filter {
 if [message] =~ /triggered/ {
  grok {
    match => ["message", "%{TIMESTAMP_ISO8601} %{INT:thread} %{WORD:loglevel} log \[-\] Staction \"%{WORD:staction_name}\" triggered for target \"%{WORD:target}\" with arguments\"{GREEDYDATA:msg}\"\."]
  break_on_match => false
  }
  mutate {
    gsub => [
      "msg","\[\]",'None',
      "msg",'\[','',
      "msg",'\]','',
      "msg","'",'"',
      "msg","None",'"None"'
    ]
  }
  json {
    source => "msg"
  }
 }
}

filter {
 if [message] =~ /completed/ {
  grok {
    match => [ "message", "%{TIMESTAMP_ISO8601} %{INT:thread} %{WORD:loglevel} log \[-\] Staction execution id \"%{WORD:execution_id}\" completed with result \"%{GREEDYDATA:msg}\""]
  break_on_match => false
  }
  mutate {
    gsub => [
      "msg","\[\]",'None',
      "msg",'\[','',
      "msg",'\]','',
      "msg","'",'"',
      "msg","None",'"None"'
    ]
  }
  json {
    source => "msg"
  }
 }
}

output {
  elasticsearch { host => localhost }
  # stdout { codec => rubydebug }
}
